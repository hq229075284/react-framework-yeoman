import { createStore, applyMiddleware, compose } from 'redux'

<% if (reduxMiddleware === 'redux-thunk') { -%>
import thunk from 'redux-thunk'
<% } %>


import { } from '@redux/store/middleware'
import rootReducer from 'reducers'
<% if (reduxMiddleware === 'redux-sage') { %>
import createSagaMiddleware from 'redux-saga'

const sagaMiddleware = createSagaMiddleware()
<% } %>

export default (initialState) => {
  const createStoreWithMiddleware = compose(
    applyMiddleware(
      <% if (reduxMiddleware === 'redux-saga') { -%>
      sagaMiddleware,
      <% } %>
      <% if (reduxMiddleware === 'redux-thunk') { -%>
      thunk,
      <% } %>
    ),
    window.devToolsExtension ? window.devToolsExtension() : f => f,
  )(createStore)
  const store = createStoreWithMiddleware(rootReducer, initialState)

  // 热加载,及时跟新reducer
  if (module.hot) {
    module.hot.accept('reducers', () => {
      const nextReducer = require('reducers')
      store.replaceReducer(nextReducer)
    })
  }
  return store
}

